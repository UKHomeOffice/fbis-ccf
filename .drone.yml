---
kind: pipeline
name: default
type: kubernetes

steps:

- name: unit-test
  pull: if-not-exists
  image: node
  environment:
    NOTIFY_KEY: USE_MOCK
  commands:
  - npm install
  when:
    branch: kore
    event: push

- name: create-artefact-kore
  image: quay.io/appvia/kore:latest
  environment:
    KORE_SERVER: https://api.kore.acp.homeoffice.gov.uk
    KORE_TOKEN:
      from_secret: kore_token
    KORE_TEAM: fbis
  commands:
    - ./kore version
    - ./kore run build build-it -t fbis
  volumes:
    - name: dockersock
      path: /var/run
  when:
    branch: kore
    event: push

- name: deploy-to-dev
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd:v1.14.0
  commands:
    - kd --insecure-skip-tls-verify --check-interval 10s -f kube/redis-service.yml -f kube/redis-network-policy.yml -f kube/redis-deployment.yml
    - kd --insecure-skip-tls-verify -f kube/dev/configmap.yaml -f kube/dev/ingress-internal.yaml -f kube/networkpolicy-internal.yaml -f kube/service.yaml
    - kd --insecure-skip-tls-verify --timeout 4m --check-interval 10s -f kube/dev/deployment.yaml
  environment:
    KUBE_NAMESPACE: sas-fbis-dev
    KUBE_SERVER:
    KUBE_TOKEN:
      from_secret: kube_token_fbis_acp_notprod_kore
  when:
    branch: kore
    event: push

services:
  - name: docker
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}

...
